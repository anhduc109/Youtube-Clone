{"version":3,"sources":["components/SearchBar.js","components/VideoDetail.js","components/VideoItem.js","components/VideoList.js","api/youtube.js","App.js","serviceWorker.js","index.js"],"names":["SearchBar","state","searchTerm","handleChange","event","_this","setState","target","value","handleSubmit","onFormSubmit","props","preventDefault","react_default","a","createElement","Paper","elevation","style","padding","onSubmit","this","TextField","fullWidth","label","onChange","React","Component","VideoDetail","_ref","video","textAlign","videoSrc","concat","id","videoId","Fragment","height","frameBorder","width","title","src","Typography","variant","snippet","channelTitle","description","VideoItem","onVideoSelect","Grid","item","xs","display","alignItems","cusor","onClick","marginRight","alt","thumbnails","medium","url","VideoList","videos","listOfVideos","map","components_VideoItem","key","container","spacing","axios","create","baseURL","App","selectedVideo","_callee","SearchTerm","response","regenerator_default","wrap","_context","prev","next","youtube","get","params","part","maxResults","q","sent","data","items","stop","_this$state","justify","components_SearchBar","components_VideoDetail","components_VideoList","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"8TAmCeA,6MA9BXC,MAAQ,CACJC,WAAY,MAGhBC,aAAe,SAACC,GACZC,EAAKC,SAAS,CACVJ,WAAYE,EAAMG,OAAOC,WAIjCC,aAAe,SAACL,GAAU,IACfF,EAAcG,EAAKJ,MAAnBC,YAGPQ,EAFuBL,EAAKM,MAArBD,cAEMR,GAEbE,EAAMQ,0FAIN,OACIC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAOC,UAAW,EAAGC,MAAO,CAACC,QAAQ,SACjCN,EAAAC,EAAAC,cAAA,QAAMK,SAAUC,KAAKZ,cACjBI,EAAAC,EAAAC,cAACO,EAAA,EAAD,CAAWC,WAAS,EAACC,MAAM,YAAYC,SAAUJ,KAAKlB,wBAxBlDuB,IAAMC,oBCmBfC,EAnBK,SAAAC,GAAa,IAAXC,EAAWD,EAAXC,MAClB,IAAIA,EAAO,OAAOjB,EAAAC,EAAAC,cAAA,OAAKG,MAAO,CAACa,UAAW,WAAWlB,EAAAC,EAAAC,cAAA,qCAErD,IAAMiB,EAAQ,iCAAAC,OAAoCH,EAAMI,GAAGC,SAE3D,OACItB,EAAAC,EAAAC,cAACF,EAAAC,EAAMsB,SAAP,KACIvB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAOC,UAAW,EAAGC,MAAO,CAACmB,OAAQ,QACjCxB,EAAAC,EAAAC,cAAA,UAAQuB,YAAa,IAAID,OAAO,OAAOE,MAAM,OAAOC,MAAM,eAAeC,IAAKT,KAElFnB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAOC,UAAW,EAAGC,MAAO,CAACC,QAAS,SAClCN,EAAAC,EAAAC,cAAC2B,EAAA,EAAD,CAAYC,QAAQ,MAAMb,EAAMc,QAAQJ,MAAxC,OAAmDV,EAAMc,QAAQC,cACjEhC,EAAAC,EAAAC,cAAC2B,EAAA,EAAD,CAAYC,QAAQ,aAAab,EAAMc,QAAQC,cAC/ChC,EAAAC,EAAAC,cAAC2B,EAAA,EAAD,CAAYC,QAAQ,aAAab,EAAMc,QAAQE,gBCAhDC,EAbG,SAAAlB,GAA4B,IAA1BC,EAA0BD,EAA1BC,MAAOkB,EAAmBnB,EAAnBmB,cACvB,OACInC,EAAAC,EAAAC,cAACkC,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,IACXtC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAOE,MAAO,CAACkC,QAAS,OAAQC,WAAY,SAAUC,MAAM,WAAYC,QAAS,kBAAMP,EAAclB,KACjGjB,EAAAC,EAAAC,cAAA,OAAKG,MAAO,CAACsC,YAAa,QAASC,IAAI,YAAYhB,IAAKX,EAAMc,QAAQc,WAAWC,OAAOC,MACxF/C,EAAAC,EAAAC,cAAC2B,EAAA,EAAD,CAAYC,QAAQ,aAChB9B,EAAAC,EAAAC,cAAA,SAAIe,EAAMc,QAAQJ,WCOvBqB,EAXG,SAAAhC,GAA6B,IAA3BiC,EAA2BjC,EAA3BiC,OAAQd,EAAmBnB,EAAnBmB,cAClBe,EAAeD,EAAOE,IAAI,SAAClC,EAAOI,GAAR,OAC5BrB,EAAAC,EAAAC,cAACkD,EAAD,CAAWjB,cAAeA,EAAekB,IAAKhC,EAAIJ,MAAOA,MAE7D,OACIjB,EAAAC,EAAAC,cAACkC,EAAA,EAAD,CAAMkB,WAAS,EAACC,QAAS,IACpBL,YCVEM,WAAMC,OAAO,CACxBC,QAAS,0CCsDEC,6MA/CbvE,MAAQ,CACN6D,OAAQ,GACRW,cAAe,QAGjBhE,mDAAe,SAAAiE,EAAMC,GAAN,IAAAC,EAAA,OAAAC,EAAA/D,EAAAgE,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACUC,EAAQC,IAAI,SAAU,CACzCC,OAAQ,CACNC,KAAM,UACNC,WAAY,EACZpB,IAAK,0CACLqB,EAAGZ,KANI,OACPC,EADOG,EAAAS,KAUbnF,EAAKC,SAAS,CACZwD,OAAQc,EAASa,KAAKC,MACtBjB,cAAeG,EAASa,KAAKC,MAAM,KAZxB,wBAAAX,EAAAY,SAAAjB,8DAgBf1B,cAAgB,SAAClB,GACfzB,EAAKC,SAAS,CAACmE,cAAe3C,6EAGtB,IAAA8D,EACwBvE,KAAKpB,MAA9BwE,EADCmB,EACDnB,cAAeX,EADd8B,EACc9B,OACtB,OACEjD,EAAAC,EAAAC,cAACkC,EAAA,EAAD,CAAM4C,QAAQ,SAAS1B,WAAS,EAACC,QAAW,IAC1CvD,EAAAC,EAAAC,cAACkC,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,IACbtC,EAAAC,EAAAC,cAACkC,EAAA,EAAD,CAAMkB,WAAS,EAACC,QAAS,IACvBvD,EAAAC,EAAAC,cAACkC,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,IACbtC,EAAAC,EAAAC,cAAC+E,EAAD,CAAWpF,aAAcW,KAAKZ,gBAEhCI,EAAAC,EAAAC,cAACkC,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,GACbtC,EAAAC,EAAAC,cAACgF,EAAD,CAAajE,MAAO2C,KAEtB5D,EAAAC,EAAAC,cAACkC,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,GACbtC,EAAAC,EAAAC,cAACiF,EAAD,CAAWlC,OAASA,EAAQd,cAAe3B,KAAK2B,2BAvC5CtB,IAAMC,WCGJsE,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO1F,EAAAC,EAAAC,cAACyF,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.1fb114be.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nimport {Paper, TextField} from '@material-ui/core';\r\n\r\nclass SearchBar extends React.Component {\r\n    state = {\r\n        searchTerm: ''\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        this.setState({\r\n            searchTerm: event.target.value\r\n        })\r\n    }\r\n\r\n    handleSubmit = (event) => {\r\n        const {searchTerm} = this.state;\r\n        const {onFormSubmit} = this.props;\r\n\r\n        onFormSubmit(searchTerm);\r\n        \r\n        event.preventDefault();\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <Paper elevation={6} style={{padding:'25px'}}>\r\n                <form onSubmit={this.handleSubmit}>\r\n                    <TextField fullWidth label='Search...' onChange={this.handleChange}/>\r\n                </form>\r\n            </Paper>\r\n        )\r\n    }\r\n}\r\n\r\nexport default SearchBar;","import React from 'react';\r\n\r\nimport {Paper, Typography} from '@material-ui/core';\r\n\r\nconst VideoDetail = ({video}) => {\r\n    if(!video) return <div style={{textAlign: 'center'}}><h1>Let's search something</h1></div>\r\n\r\n    const videoSrc = `https://www.youtube.com/embed/${video.id.videoId}`\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Paper elevation={6} style={{height: '70%'}}>\r\n                <iframe frameBorder =\"0\" height=\"100%\" width=\"100%\" title=\"Video Player\" src={videoSrc}></iframe>\r\n            </Paper>\r\n            <Paper elevation={6} style={{padding: '15px'}}>\r\n                <Typography variant=\"h4\">{video.snippet.title} by {video.snippet.channelTitle}</Typography>\r\n                <Typography variant=\"subtitle2\">{video.snippet.channelTitle}</Typography>\r\n                <Typography variant=\"subtitle1\">{video.snippet.description}</Typography>\r\n            </Paper>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default VideoDetail;","import React from 'react';\r\n\r\nimport {Grid, Paper, Typography} from '@material-ui/core';\r\n\r\nconst VideoItem = ({video, onVideoSelect}) => {\r\n    return (\r\n        <Grid item xs={12}>\r\n            <Paper style={{display: 'flex', alignItems: 'center', cusor:'pointer'}} onClick={() => onVideoSelect(video)}>\r\n                <img style={{marginRight: '20px'}} alt=\"thumbnail\" src={video.snippet.thumbnails.medium.url}/>\r\n                <Typography variant=\"subtitle1\">\r\n                    <b>{video.snippet.title}</b>\r\n                </Typography>\r\n            </Paper>\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default VideoItem;","import React from 'react';\r\n\r\nimport {Grid} from '@material-ui/core';\r\n\r\nimport VideoItem from './VideoItem';\r\n\r\nconst VideoList = ({videos, onVideoSelect}) => {\r\n    const listOfVideos = videos.map((video, id) =>\r\n        <VideoItem onVideoSelect={onVideoSelect} key={id} video={video}/>\r\n    )\r\n    return (\r\n        <Grid container spacing={10}>\r\n            {listOfVideos}\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default VideoList;","import axios from 'axios';\r\n\r\nexport default axios.create({\r\n    baseURL: 'https://www.googleapis.com/youtube/v3',\r\n});","import React from 'react';\nimport './App.css';\n\nimport { Grid } from '@material-ui/core';\n\nimport {SearchBar, VideoDetail, VideoList} from './components/index';\n\nimport youtube from './api/youtube';\n\nclass App extends React.Component {\n  state = {\n    videos: [],\n    selectedVideo: null,\n  }\n\n  handleSubmit = async(SearchTerm) => {\n    const response = await youtube.get('search', {\n        params: {\n          part: 'snippet',\n          maxResults: 5,\n          key: 'AIzaSyDGT6TZsQL4NNGK-A6Pc1pZo--DIBoLl_Y',\n          q: SearchTerm\n      }\n    });\n\n    this.setState({\n      videos: response.data.items,\n      selectedVideo: response.data.items[0]\n    })\n  } \n\n  onVideoSelect = (video) => {\n    this.setState({selectedVideo: video});\n  }\n\n  render () {\n    const {selectedVideo, videos} = this.state;\n    return(\n      <Grid justify=\"center\" container spacing = {10}>\n        <Grid item xs={12}>\n          <Grid container spacing={10}>\n            <Grid item xs={12}>\n              <SearchBar onFormSubmit={this.handleSubmit}/>\n            </Grid>\n            <Grid item xs={8}>\n              <VideoDetail video={selectedVideo}/>\n            </Grid>\n            <Grid item xs={4}>\n              <VideoList videos ={videos} onVideoSelect={this.onVideoSelect} />\n            </Grid>\n          </Grid>\n        </Grid>\n      </Grid>\n    )\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}