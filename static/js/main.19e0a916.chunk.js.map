{"version":3,"sources":["components/SearchBar.js","components/VideoDetail.js","components/VideoItem.js","components/VideoList.js","api/youtube.js","components/TrendingVideos.js","App.js","serviceWorker.js","index.js"],"names":["SearchBar","state","searchTerm","handleChange","event","_this","setState","target","value","handleSubmit","onFormSubmit","props","preventDefault","react_default","a","createElement","Navbar","bg","sticky","Brand","href","xmlns","width","height","viewBox","d","Form","className","onSubmit","this","FormControl","type","placeholder","onChange","Button","variant","React","Component","VideoDetail","_ref","video","videoSrc","concat","id","videoId","frameBorder","title","src","snippet","channelTitle","description","VideoItem","onVideoSelect","fromHomePage","onClick","Image","thumbnails","medium","url","thumbnail","fluid","VideoList","videos","listOfVideos","map","components_VideoItem","key","axios","create","baseURL","TrendingVideos","App","trendingVideos","selectedVideo","noInputErr","trendingSubmit","_callee","SearchTerm","response","regenerator_default","wrap","_context","prev","next","youtube","get","params","part","maxResults","q","sent","data","items","stop","_callee2","_context2","trim","slice","_this$state","components_SearchBar","Alert","Container","Row","Col","lg","components_VideoDetail","components_VideoList","components_TrendingVideos","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.19e0a916.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nimport { Navbar, Form, FormControl, Button } from \"react-bootstrap\";\r\n\r\nclass SearchBar extends React.Component {\r\n  state = {\r\n    searchTerm: \"\"\r\n  };\r\n\r\n  handleChange = event => {\r\n    this.setState({\r\n      searchTerm: event.target.value\r\n    });\r\n  };\r\n\r\n  handleSubmit = event => {\r\n    const { searchTerm } = this.state;\r\n    const { onFormSubmit } = this.props;\r\n\r\n    onFormSubmit(searchTerm);\r\n\r\n    event.preventDefault();\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Navbar bg=\"light\" sticky=\"top\">\r\n        <Navbar.Brand href=\"/\">\r\n          <svg\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n            width=\"30\"\r\n            height=\"30\"\r\n            viewBox=\"0 0 30 30\"\r\n          >\r\n            <path d=\"M19.615 3.184c-3.604-.246-11.631-.245-15.23 0-3.897.266-4.356 2.62-4.385 8.816.029 6.185.484 8.549 4.385 8.816 3.6.245 11.626.246 15.23 0 3.897-.266 4.356-2.62 4.385-8.816-.029-6.185-.484-8.549-4.385-8.816zm-10.615 12.816v-8l8 3.993-8 4.007z\" />\r\n          </svg>\r\n          UTube\r\n        </Navbar.Brand>\r\n        <Form className=\"form-wrapper\" onSubmit={this.handleSubmit}>\r\n          <FormControl\r\n            type=\"text\"\r\n            placeholder=\"Search...\"\r\n            className=\"form-input\"\r\n            onChange={this.handleChange}\r\n          />\r\n          <Button className=\"form-submit\" type=\"submit\" variant=\"dark\">\r\n            Search\r\n          </Button>\r\n        </Form>\r\n      </Navbar>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SearchBar;\r\n","import React from \"react\";\r\n\r\nconst VideoDetail = ({ video }) => {\r\n  if (!video)\r\n    return (\r\n      <div>\r\n        <h4>Trending</h4>\r\n      </div>\r\n    );\r\n\r\n  const videoSrc = `https://www.youtube.com/embed/${video.id.videoId}`;\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"iframe-div\">\r\n        <iframe\r\n          frameBorder=\"0\"\r\n          height=\"100%\"\r\n          width=\"100%\"\r\n          title=\"Video Player\"\r\n          src={videoSrc}\r\n        ></iframe>\r\n      </div>\r\n      <div>\r\n        <h4>\r\n          {video.snippet.title} by {video.snippet.channelTitle}\r\n        </h4>\r\n        <h5>{video.snippet.channelTitle}</h5>\r\n        <p>{video.snippet.description}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default VideoDetail;\r\n","import React from \"react\";\r\n\r\nimport { Image } from \"react-bootstrap\";\r\n\r\nconst VideoItem = ({ video, onVideoSelect, fromHomePage }) => {\r\n  if (fromHomePage === false) {\r\n    return (\r\n      <div className=\"video-item-div\" onClick={() => onVideoSelect(video)}>\r\n        <Image\r\n          className=\"video-item-img\"\r\n          src={video.snippet.thumbnails.medium.url}\r\n          thumbnail\r\n          fluid\r\n        />\r\n        <h6 className=\"video-item-title\">{video.snippet.title}</h6>\r\n      </div>\r\n    );\r\n  } else {\r\n    return (\r\n      <div>\r\n        <div\r\n          className=\"video-item-div\"\r\n          onClick={() => onVideoSelect(video, fromHomePage)}\r\n        >\r\n          <Image src={video.snippet.thumbnails.medium.url} thumbnail fluid />\r\n          <div className=\"video-item-title\">\r\n            <h5>{video.snippet.title}</h5>\r\n            <h6>{video.snippet.channelTitle}</h6>\r\n            <p>{video.snippet.description}</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nexport default VideoItem;\r\n","import React from \"react\";\r\n\r\nimport VideoItem from \"./VideoItem\";\r\n\r\nconst VideoList = ({ videos, onVideoSelect }) => {\r\n  const listOfVideos = videos.map((video, id) => (\r\n    <VideoItem\r\n      onVideoSelect={onVideoSelect}\r\n      key={id}\r\n      video={video}\r\n      fromHomePage={false}\r\n    />\r\n  ));\r\n  return <div>{listOfVideos}</div>;\r\n};\r\n\r\nexport default VideoList;\r\n","import axios from 'axios';\r\n\r\nexport default axios.create({\r\n    baseURL: 'https://www.googleapis.com/youtube/v3',\r\n});","import React from \"react\";\r\n\r\nimport VideoItem from \"./VideoItem\";\r\n\r\nconst TrendingVideos = ({ videos, onVideoSelect }) => {\r\n  const listOfVideos = videos.map((video, id) => (\r\n    <VideoItem\r\n      onVideoSelect={onVideoSelect}\r\n      key={id}\r\n      video={video}\r\n      fromHomePage={true}\r\n    />\r\n  ));\r\n  return (\r\n    <div>\r\n      <h4>Music Video</h4>\r\n      {listOfVideos}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TrendingVideos;\r\n","import React from \"react\";\nimport \"./App.css\";\n\nimport { Container, Row, Col, Alert } from \"react-bootstrap\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nimport { SearchBar, VideoDetail, VideoList } from \"./components/index\";\n\nimport youtube from \"./api/youtube\";\nimport TrendingVideos from \"./components/TrendingVideos\";\n\nclass App extends React.Component {\n  state = {\n    trendingVideos: [],\n    videos: [],\n    selectedVideo: null,\n    noInputErr: false\n  };\n\n  componentDidMount() {\n    this.trendingSubmit(\"Music Video\");\n  }\n\n  trendingSubmit = async SearchTerm => {\n    const response = await youtube.get(\"search\", {\n      params: {\n        part: \"snippet\",\n        maxResults: 8,\n        key: \"AIzaSyDGT6TZsQL4NNGK-A6Pc1pZo--DIBoLl_Y\",\n        q: SearchTerm\n      }\n    });\n    this.setState({\n      trendingVideos: response.data.items\n    });\n  };\n\n  handleSubmit = async SearchTerm => {\n    if (SearchTerm.trim() !== \"\") {\n      const response = await youtube.get(\"search\", {\n        params: {\n          part: \"snippet\",\n          maxResults: 6,\n          key: \"AIzaSyDGT6TZsQL4NNGK-A6Pc1pZo--DIBoLl_Y\",\n          q: SearchTerm\n        }\n      });\n\n      this.setState({\n        videos: response.data.items.slice(1),\n        selectedVideo: response.data.items[0],\n        noInputErr: false\n      });\n    } else {\n      this.setState({\n        noInputErr: true\n      });\n    }\n  };\n\n  onVideoSelect = (video, fromHomePage) => {\n    if (fromHomePage === true) {\n      this.setState({\n        selectedVideo: video,\n        videos: this.state.trendingVideos.slice(1, 6),\n        noInputErr: false\n      });\n    } else {\n      this.setState({\n        selectedVideo: video,\n        noInputErr: false\n      });\n    }\n  };\n\n  render() {\n    const { selectedVideo, videos, trendingVideos, noInputErr } = this.state;\n    return (\n      <div>\n        <SearchBar onFormSubmit={this.handleSubmit} />\n        {noInputErr && (\n          <Alert variant=\"danger\">\n            Please insert a keyword to the Search bar!\n          </Alert>\n        )}\n        <Container className=\"content-wrapper\" fluid>\n          {selectedVideo ? (\n            <Row>\n              <Col lg={8}>\n                <VideoDetail video={selectedVideo} />\n              </Col>\n              <Col lg={4}>\n                <VideoList videos={videos} onVideoSelect={this.onVideoSelect} />\n              </Col>\n            </Row>\n          ) : (\n            <TrendingVideos\n              videos={trendingVideos}\n              onVideoSelect={this.onVideoSelect}\n            />\n          )}\n        </Container>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}